# Single-stage build for Admin Web UI
FROM node:20-alpine

# Install pnpm and build dependencies (combine in one layer for efficiency)
RUN npm install -g pnpm@10.14.0 && \
    apk add --no-cache dumb-init python3 make g++ && \
    apk cache clean

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files and workspace manifest for dependency installation
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./
# Copy package.json files preserving directory structure
COPY apps/admin-web/package*.json ./apps/admin-web/
COPY packages/shared/package*.json ./packages/shared/

# Install all dependencies (including dev dependencies for building)
RUN pnpm install --no-frozen-lockfile

# Copy only source code and config files needed for building
COPY apps/admin-web/app ./apps/admin-web/app
COPY apps/admin-web/components ./apps/admin-web/components
COPY apps/admin-web/hooks ./apps/admin-web/hooks
COPY apps/admin-web/lib ./apps/admin-web/lib
COPY apps/admin-web/styles ./apps/admin-web/styles
COPY apps/admin-web/utils ./apps/admin-web/utils
COPY apps/admin-web/public ./apps/admin-web/public
COPY apps/admin-web/next.config.mjs ./apps/admin-web/
COPY apps/admin-web/tailwind.config.js ./apps/admin-web/
COPY apps/admin-web/postcss.config.js ./apps/admin-web/
COPY apps/admin-web/tsconfig.json ./apps/admin-web/
COPY apps/admin-web/next-env.d.ts ./apps/admin-web/
COPY packages/shared/src ./packages/shared/src
COPY packages/shared/tsconfig.json ./packages/shared/
COPY tsconfig.base.json ./

# Build shared package first, then admin-web
RUN pnpm run build:shared && pnpm run build:admin

# Clean up: remove source files and dev dependencies, keep only built artifacts and prod deps
RUN rm -rf apps/admin-web/app apps/admin-web/components apps/admin-web/hooks \
           apps/admin-web/lib apps/admin-web/styles apps/admin-web/utils \
           packages/shared/src *.tsbuildinfo apps/*/tsconfig.json \
           packages/*/tsconfig.json tsconfig.base.json \
           apps/admin-web/tailwind.config.js apps/admin-web/postcss.config.js && \
    pnpm prune --prod

# Change ownership to non-root user
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the Next.js application using pnpm from workspace root
CMD ["dumb-init", "sh", "-c", "pnpm --filter @rag/admin-web run start -- -p 3000"]
