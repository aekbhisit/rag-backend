# Dockerfile for Admin Web UI
FROM node:20-alpine AS base

# Install pnpm and build dependencies
RUN npm install -g pnpm && \
    apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Copy package files and workspace manifest
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./
COPY apps/*/package*.json ./apps/

# Install all dependencies
RUN pnpm install --no-frozen-lockfile

# Copy source code
COPY . .

# Production stage
FROM node:20-alpine AS production

# Install pnpm and dumb-init for proper signal handling
RUN npm install -g pnpm && \
    apk add --no-cache dumb-init

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files for production dependencies
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./
COPY apps/*/package*.json ./apps/

# Install all dependencies (including dev dependencies for now)
RUN pnpm install --no-frozen-lockfile

# Copy pre-built admin web application and all dependencies from base stage
COPY --from=base /app/apps/admin-web/.next ./apps/admin-web/.next
COPY --from=base /app/apps/admin-web/public ./apps/admin-web/public
COPY --from=base /app/apps/admin-web/package*.json ./apps/admin-web/
COPY --from=base /app/packages ./packages
COPY --from=base /app/node_modules ./node_modules

# Change ownership to non-root user
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Ensure we run from the admin-web app directory
WORKDIR /app/apps/admin-web

# Start the Next.js application explicitly (use workspace-level Next binary)
CMD ["dumb-init", "node", "/app/node_modules/next/dist/bin/next", "start", "-p", "3000"]
