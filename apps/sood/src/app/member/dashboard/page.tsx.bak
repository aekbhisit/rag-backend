"use client";

import React, { useState, useEffect } from 'react';
import { useAuth } from '@/app/contexts/AuthContext';
import { useCart } from '@/app/contexts/CartContext';
import { useRouter, useSearchParams } from 'next/navigation';
import Link from 'next/link';
import Header from '@/app/components/Header';
import MarketplaceChatBot from '@/app/components/MarketplaceChatBot';
import Breadcrumb, { breadcrumbConfigs } from '@/app/components/Breadcrumb';
import { UserIcon as User, TicketIcon as Ticket, ShoppingCartIcon as ShoppingCart, HeartIcon as Heart, StarIcon as Star, ArrowTrendingUpIcon as TrendingUp, CurrencyDollarIcon as DollarSign, CalendarIcon as Calendar, MapPinIcon as MapPin, ClockIcon as Clock, ArrowDownTrayIcon as Download, EyeIcon as Eye, ChatBubbleLeftRightIcon as MessageCircle, Cog6ToothIcon as Settings, BellIcon as Bell, ShieldCheckIcon as Shield, CreditCardIcon as CreditCard, ClockIcon as History, DocumentTextIcon as FileText, PlusIcon as Plus, PencilIcon as Edit, TrashIcon as Trash2, ArrowRightOnRectangleIcon as LogOut, QuestionMarkCircleIcon as HelpCircle, ChevronDownIcon as ChevronDown, ChevronUpIcon as ChevronUp, MinusIcon } from '@heroicons/react/24/outline';

interface MemberStats {
  ticketsListed: number;
  ticketsSold: number;
  ticketsBought: number;
  totalEarnings: number;
  totalSpent: number;
  rating: number;
  reviewCount: number;
}

interface TicketListing {
  id: string;
  title: string;
  venue: string;
  date: string;
  price: number;
  status: 'active' | 'sold' | 'pending' | 'expired';
  views: number;
  category: string;
}

interface Order {
  id: string;
  title: string;
  venue: string;
  date: string;
  price: number;
  status: 'confirmed' | 'pending' | 'cancelled' | 'completed';
  orderDate: string;
  tickets: number;
}

interface Review {
  id: string;
  reviewer: string;
  rating: number;
  comment: string;
  date: string;
  type: 'buyer' | 'seller';
}

interface TicketListing {
  id: string;
  title: string;
  venue: string;
  city: string;
  date: string;
  time: string;
  price: number;
  originalPrice: number;
  status: 'active' | 'sold' | 'pending' | 'expired';
  views: number;
  favorites: number;
  category: string;
  section: string;
  row: string;
  seat: string;
  image: string;
  description: string;
  createdAt: string;
}

const MemberDashboard: React.FC = () => {
  const { user, logout } = useAuth();
  const { totalItems } = useCart();
  const router = useRouter();
  const searchParams = useSearchParams();
  const [activeTab, setActiveTab] = useState('overview');
  const [ticketSearchQuery, setTicketSearchQuery] = useState('');
  const [ticketStatusFilter, setTicketStatusFilter] = useState('all');
  const [expandedFAQ, setExpandedFAQ] = useState<string | null>(null);
  const [isChatboxMinimized, setIsChatboxMinimized] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // FAQ Data
  const faqData = [
    {
      id: 'selling-tickets',
      question: 'How do I sell tickets on the platform?',
      answer: 'To sell tickets, go to "My Tickets" tab and click "Add Ticket". Upload clear photos of your tickets, set a competitive price, and provide detailed event information. Our verification process ensures secure transactions.'
    },
    {
      id: 'payment-security',
      question: 'How secure are payments?',
      answer: 'We use escrow payment system with 256-bit SSL encryption. Funds are held securely until the buyer confirms receipt of tickets. Our platform fee is 5% + à¸¿10 processing fee.'
    },
    {
      id: 'ticket-transfer',
      question: 'How are tickets transferred?',
      answer: 'Digital tickets are transferred through secure platforms like Ticketmaster Transfer. Physical tickets are shipped with tracking. All transfers are monitored for buyer protection.'
    },
    {
      id: 'refund-policy',
      question: 'What is the refund policy?',
      answer: 'Refunds are available if events are canceled or tickets are invalid. For event changes, refund eligibility depends on the original ticket terms. Contact support within 24 hours of any issues.'
    },
    {
      id: 'pricing-tips',
      question: 'How should I price my tickets?',
      answer: 'Check similar listings for market rates. Consider seat location, event popularity, and time until event. Competitive pricing sells faster. Premium seats can command higher prices.'
    },
    {
      id: 'account-verification',
      question: 'Why verify my account?',
      answer: 'Verified accounts build buyer trust, get priority listing visibility, and access to premium features. Upload ID document and phone verification for instant verification.'
    }
  ];

  // Handle URL-based navigation
  useEffect(() => {
    const tab = searchParams.get('tab');
    if (tab && ['overview', 'my-tickets', 'orders', 'favorites', 'reviews', 'payments', 'settings'].includes(tab)) {
      setActiveTab(tab);
    }
  }, [searchParams]);

  // Update URL when tab changes
  const handleTabChange = (tabId: string) => {
    setActiveTab(tabId);
    const params = new URLSearchParams(searchParams.toString());
    params.set('tab', tabId);
    router.push(`/member/dashboard?${params.toString()}`);
  };
  
  const memberStats: MemberStats = {
    ticketsListed: 24,
    ticketsSold: 18,
    ticketsBought: 32,
    totalEarnings: 4250,
    totalSpent: 2890,
    rating: 4.8,
    reviewCount: 127
  };

  const recentListings: TicketListing[] = [
    {
      id: '1',
      title: 'Taylor Swift - The Eras Tour Bangkok',
      venue: 'Rajamangala National Stadium',
      city: 'Bangkok, Thailand',
      date: '2024-12-15',
      time: '19:30',
      price: 12500,
      originalPrice: 15000,
      status: 'active',
      views: 189,
      favorites: 24,
      category: 'Concert',
      section: 'Floor A',
      row: '5',
      seat: '101-102',
      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400',
      description: 'Amazing floor seats with perfect view of the stage.',
      createdAt: '2024-10-15'
    },
    {
      id: '2',
      title: 'Thailand Premier League Final',
      venue: 'Chang Arena',
      city: 'Buriram, Thailand',
      date: '2024-11-28',
      time: '20:00',
      price: 8500,
      originalPrice: 10000,
      status: 'sold',
      views: 256,
      favorites: 18,
      category: 'Sports',
      section: '111',
      row: '12',
      seat: '15-16',
      image: 'https://images.unsplash.com/photo-1546519638-68e109498ffc?w=400',
      description: 'Premium seats for the championship match.',
      createdAt: '2024-09-20'
    }
  ];

  const recentOrders: Order[] = [
    {
      id: 'ORD-001',
      title: 'Hamilton Broadway',
      venue: 'Richard Rodgers Theatre',
      date: '2024-12-01',
      price: 350,
      status: 'confirmed',
      orderDate: '2024-10-15',
      tickets: 2
    },
    {
      id: 'ORD-002',
      title: 'NBA Finals Game 7',
      venue: 'Chase Center',
      date: '2024-10-25',
      price: 890,
      status: 'completed',
      orderDate: '2024-09-20',
      tickets: 1
    }
  ];

  const reviews: Review[] = [
    {
      id: '1',
      reviewer: 'Sarah Johnson',
      rating: 5,
      comment: 'Great seller! Tickets were exactly as described and delivered quickly.',
      date: '2024-10-20',
      type: 'buyer'
    },
    {
      id: '2',
      reviewer: 'Mike Chen',
      rating: 4,
      comment: 'Smooth transaction, would buy again.',
      date: '2024-10-18',
      type: 'buyer'
    }
  ];

  // Favorites Data
  const favoriteItems = [
    {
      id: '1',
      title: 'Taylor Swift - The Eras Tour Bangkok',
      venue: 'Rajamangala National Stadium',
      city: 'Bangkok, Thailand',
      date: '2024-12-15',
      time: '19:30',
      price: 12500,
      originalPrice: 15000,
      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400',
      category: 'Concert',
      seller: {
        name: 'ThaiTickets Pro',
        rating: 4.9,
        soldCount: 2847,
        verified: true
      },
      addedDate: '2024-10-20'
    },
    {
      id: '2',
      title: 'Bangkok International Jazz Festival',
      venue: 'Lumpini Park',
      city: 'Bangkok, Thailand', 
      date: '2024-12-01',
      time: '18:00',
      price: 4500,
      originalPrice: 5500,
      image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400',
      category: 'Festival',
      seller: {
        name: 'Event Masters',
        rating: 4.7,
        soldCount: 1523,
        verified: true
      },
      addedDate: '2024-10-18'
    },
    {
      id: '3',
      title: 'Thailand Premier League Final',
      venue: 'Chang Arena',
      city: 'Buriram, Thailand',
      date: '2024-11-28',
      time: '20:00', 
      price: 8500,
      originalPrice: 10000,
      image: 'https://images.unsplash.com/photo-1546519638-68e109498ffc?w=400',
      category: 'Sports',
      seller: {
        name: 'Sports Hub Thailand',
        rating: 4.8,
        soldCount: 3291,
        verified: true
      },
      addedDate: '2024-10-15'
    },
    {
      id: '4',
      title: 'Hamilton Broadway Musical',
      venue: 'Muang Thai Rachadalai Theatre',
      city: 'Bangkok, Thailand',
      date: '2024-12-10',
      time: '19:30',
      price: 7500,
      originalPrice: 9000,
      image: 'https://images.unsplash.com/photo-1507924538820-ede94a04019d?w=400',
      category: 'Theater',
      seller: {
        name: 'Broadway Thailand',
        rating: 4.6,
        soldCount: 856,
        verified: true
      },
      addedDate: '2024-10-12'
    },
    {
      id: '5',
      title: 'Ed Sheeran Live in Bangkok',
      venue: 'Impact Arena',
      city: 'Bangkok, Thailand',
      date: '2024-12-20',
      time: '20:00',
      price: 9500,
      originalPrice: 11000,
      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400',
      category: 'Concert',
      seller: {
        name: 'Concert Pro',
        rating: 4.9,
        soldCount: 4127,
        verified: true
      },
      addedDate: '2024-10-10'
    },
    {
      id: '6',
      title: 'Muay Thai World Championship',
      venue: 'Lumpinee Boxing Stadium',
      city: 'Bangkok, Thailand',
      date: '2024-11-25',
      time: '19:00',
      price: 3200,
      originalPrice: 4000,
      image: 'https://images.unsplash.com/photo-1544737151-6e4b9ce48301?w=400',
      category: 'Sports',
      seller: {
        name: 'Fight Night Thailand',
        rating: 4.5,
        soldCount: 1247,
        verified: true
      },
      addedDate: '2024-10-08'
    }
  ];

  const myTicketListings: TicketListing[] = [
    {
      id: '1',
      title: 'Taylor Swift - The Eras Tour Bangkok',
      venue: 'Rajamangala National Stadium',
      city: 'Bangkok, Thailand',
      date: '2024-12-15',
      time: '19:30',
      price: 12500,
      originalPrice: 15000,
      status: 'active',
      views: 189,
      favorites: 24,
      category: 'Concert',
      section: 'Floor A',
      row: '5',
      seat: '101-102',
      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400',
      description: 'Amazing floor seats with perfect view of the stage.',
      createdAt: '2024-10-15'
    },
    {
      id: '2',
      title: 'Thailand Premier League Final',
      venue: 'Chang Arena',
      city: 'Buriram, Thailand',
      date: '2024-11-28',
      time: '20:00',
      price: 8500,
      originalPrice: 10000,
      status: 'sold',
      views: 256,
      favorites: 18,
      category: 'Sports',
      section: '111',
      row: '12',
      seat: '15-16',
      image: 'https://images.unsplash.com/photo-1546519638-68e109498ffc?w=400',
      description: 'Premium seats for the championship match.',
      createdAt: '2024-09-20'
    },
    {
      id: '3',
      title: 'Bangkok International Jazz Festival',
      venue: 'Lumpini Park',
      city: 'Bangkok, Thailand',
      date: '2024-12-01',
      time: '18:00',
      price: 4500,
      originalPrice: 5500,
      status: 'pending',
      views: 167,
      favorites: 31,
      category: 'Festival',
      section: 'VIP',
      row: 'A',
      seat: '15-16',
      image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400',
      description: 'VIP section with great stage view and complimentary drinks.',
      createdAt: '2024-10-01'
    },
    {
      id: '4',
      title: 'Muay Thai Championship',
      venue: 'Lumpinee Boxing Stadium',
      city: 'Bangkok, Thailand',
      date: '2024-10-25',
      time: '19:00',
      price: 3200,
      originalPrice: 4000,
      status: 'expired',
      views: 89,
      favorites: 12,
      category: 'Sports',
      section: 'Ringside',
      row: '1',
      seat: '8-9',
      image: 'https://images.unsplash.com/photo-1544737151-6e4b9ce48301?w=400',
      description: 'Ringside seats for the championship fight.',
      createdAt: '2024-09-15'
    }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active': return 'text-green-600 bg-green-50 border-green-200';
      case 'sold': return 'text-blue-600 bg-blue-50 border-blue-200';
      case 'pending': return 'text-yellow-600 bg-yellow-50 border-yellow-200';
      case 'expired': return 'text-red-600 bg-red-50 border-red-200';
      case 'confirmed': return 'text-green-600 bg-green-50 border-green-200';
      case 'cancelled': return 'text-red-600 bg-red-50 border-red-200';
      case 'completed': return 'text-blue-600 bg-blue-50 border-blue-200';
      default: return 'text-gray-600 bg-gray-50 border-gray-200';
    }
  };

  const filteredTickets = myTicketListings.filter(ticket => {
    const matchesSearch = ticket.title.toLowerCase().includes(ticketSearchQuery.toLowerCase()) ||
                         ticket.venue.toLowerCase().includes(ticketSearchQuery.toLowerCase());
    const matchesStatus = ticketStatusFilter === 'all' || ticket.status === ticketStatusFilter;
    return matchesSearch && matchesStatus;
  });

  const ticketTabs = [
    { id: 'all', label: 'All Tickets', count: myTicketListings.length },
    { id: 'active', label: 'Active', count: myTicketListings.filter(t => t.status === 'active').length },
    { id: 'sold', label: 'Sold', count: myTicketListings.filter(t => t.status === 'sold').length },
    { id: 'pending', label: 'Pending', count: myTicketListings.filter(t => t.status === 'pending').length },
    { id: 'expired', label: 'Expired', count: myTicketListings.filter(t => t.status === 'expired').length }
  ];

  const tabs = [
    { id: 'overview', label: 'Overview', icon: User },
    { id: 'my-tickets', label: 'My Tickets', icon: Ticket },
    { id: 'orders', label: 'Orders', icon: ShoppingCart },
    { id: 'favorites', label: 'Favorites', icon: Heart },
    { id: 'reviews', label: 'Reviews', icon: Star },
    { id: 'payments', label: 'Payments', icon: CreditCard },
    { id: 'settings', label: 'Settings', icon: Settings }
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Using the new reusable Header component */}
      <Header />
      
      {/* Breadcrumb */}
      <div className="bg-white border-b border-gray-200">
        <div className="w-full px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
          <Breadcrumb items={breadcrumbConfigs.member.dashboard} />
          
          {/* Mobile & Tablet Dashboard Menu Hamburger */}
          <button 
            className="lg:hidden p-2 rounded-md bg-blue-50 text-blue-600 hover:bg-blue-100 transition-colors" 
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            aria-label="Toggle dashboard menu"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
              <path strokeLinecap="round" strokeLinejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
            </svg>
          </button>
        </div>
      </div>

      {/* User Info Bar */}
      <div className="bg-gradient-to-r from-blue-50 to-purple-50 border-b border-gray-200">
        <div className="w-full px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex flex-col sm:flex-row md:flex-row md:items-center md:justify-between gap-4">
            <div className="flex items-center space-x-4">
              <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-2xl font-bold">
                {user?.name?.charAt(0) || 'J'}
              </div>
              <div>
                <h1 className="text-xl md:text-2xl font-bold text-gray-800">Welcome back, {user?.name || 'Member'}!</h1>
                <div className="flex flex-wrap items-center gap-2 md:gap-4 mt-1">
                  <div className="flex items-center space-x-1">
                    <Star className="w-4 h-4 text-yellow-400 fill-current" />
                    <span className="text-sm font-medium">{memberStats.rating}</span>
                    <span className="text-sm text-gray-500">({memberStats.reviewCount} reviews)</span>
                  </div>
                  <span className="text-sm text-gray-500">Member since {user?.joinDate ? new Date(user.joinDate).toLocaleDateString() : 'Jan 2023'}</span>
                </div>
              </div>
            </div>
            
            {/* Member Status & Quick Stats */}
            <div className="flex items-center justify-between sm:justify-end md:justify-end sm:space-x-4 md:space-x-6 bg-white sm:bg-transparent md:bg-transparent p-3 sm:p-0 md:p-0 rounded-lg sm:rounded-none md:rounded-none shadow-sm sm:shadow-none md:shadow-none border border-gray-100 sm:border-0 md:border-0">
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-blue-600">{memberStats.ticketsSold}</div>
                <div className="text-xs text-gray-500">Sold</div>
              </div>
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-green-600">à¸¿{memberStats.totalEarnings.toLocaleString()}</div>
                <div className="text-xs text-gray-500">Earned</div>
              </div>
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-purple-600">{memberStats.ticketsListed}</div>
                <div className="text-xs text-gray-500">Listed</div>
              </div>
              {totalItems > 0 && (
                <div className="text-center hidden sm:block md:block">
                  <div className="flex items-center space-x-1 text-blue-600 justify-center">
                    <ShoppingCart className="w-5 h-5" />
                    <span className="text-lg font-bold">{totalItems}</span>
                  </div>
                  <div className="text-xs text-gray-500">In Cart</div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Mobile & Tablet Menu Overlay */}
      {isMobileMenuOpen && (
        <div className="fixed inset-0 z-50 lg:hidden">
          {/* Backdrop */}
          <div 
            className="fixed inset-0 bg-black bg-opacity-50"
            onClick={() => setIsMobileMenuOpen(false)}
          ></div>
          
          {/* Menu Content - Optimized for Mobile & Tablet */}
          <div className="fixed top-0 right-0 w-72 sm:w-80 md:w-96 h-full bg-white shadow-lg overflow-y-auto">
            <div className="p-4 border-b border-gray-200 flex items-center justify-between bg-gradient-to-r from-blue-50 to-purple-50">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xl font-bold">
                  {user?.name?.charAt(0) || 'J'}
                </div>
                <div>
                  <h2 className="text-lg font-semibold text-gray-900">Dashboard Menu</h2>
                  <p className="text-sm text-gray-600">Member options</p>
                </div>
              </div>
              <button 
                onClick={() => setIsMobileMenuOpen(false)} 
                className="text-gray-500 hover:text-gray-700 p-1.5 rounded-md hover:bg-white hover:bg-opacity-50 transition-colors"
                aria-label="Close menu"
              >
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            
            <nav className="p-4">
              <ul className="space-y-2">
                {tabs.map((tab) => {
                  const Icon = tab.icon;
                  return (
                    <li key={tab.id}>
                      <button
                        onClick={() => {
                          handleTabChange(tab.id);
                          setIsMobileMenuOpen(false);
                        }}
                        className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-colors ${
                          activeTab === tab.id
                            ? 'bg-blue-600 text-white border border-blue-600'
                            : 'text-gray-700 hover:text-gray-800 hover:bg-gray-100'
                        }`}
                      >
                        <Icon className="w-5 h-5" />
                        <span className="font-medium">{tab.label}</span>
                      </button>
                    </li>
                  );
                })}
              </ul>
              
              <div className="mt-6 pt-6 border-t border-gray-200">
                <div className="flex items-center space-x-2 mb-4">
                  <HelpCircle className="w-5 h-5 text-blue-600" />
                  <h3 className="text-base font-semibold text-gray-900">Quick Help</h3>
                </div>
                
                <div className="space-y-2">
                  {faqData.slice(0, 3).map((faq) => (
                    <div key={faq.id} className="border border-gray-200 rounded-lg">
                      <button
                        onClick={() => setExpandedFAQ(expandedFAQ === faq.id ? null : faq.id)}
                        className="w-full flex items-center justify-between p-3 text-left hover:bg-gray-50 transition-colors"
                      >
                        <span className="text-sm font-medium text-gray-800">{faq.question}</span>
                        {expandedFAQ === faq.id ? (
                          <ChevronUp className="w-4 h-4 text-gray-500" />
                        ) : (
                          <ChevronDown className="w-4 h-4 text-gray-500" />
                        )}
                      </button>
                      {expandedFAQ === faq.id && (
                        <div className="px-3 pb-3 text-sm text-gray-600 border-t border-gray-100">
                          <p className="pt-2">{faq.answer}</p>
                        </div>
                      )}
                    </div>
                  ))}
                  <Link 
                    href="/help" 
                    className="block w-full text-center py-2 text-sm text-blue-600 hover:text-blue-700 font-medium"
                  >
                    View All Help Articles
                  </Link>
                </div>
              </div>
              
              <div className="mt-6 pt-6 border-t border-gray-200">
                <button 
                  onClick={() => logout()} 
                  className="w-full flex items-center justify-center space-x-2 px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition-colors"
                >
                  <LogOut className="w-5 h-5" />
                  <span>Sign Out</span>
                </button>
              </div>
            </nav>
          </div>
        </div>
      )}

      <div className="w-full px-4 sm:px-4 md:px-6 lg:px-8 py-6 sm:py-6 md:py-8 lg:py-8">
        <div className="flex flex-col md:flex-row lg:flex-row gap-4 md:gap-4 lg:gap-8 max-w-full">
          {/* Sidebar Navigation */}
          <aside className="w-full md:w-52 lg:w-64 flex-shrink-0 space-y-4 md:space-y-6 order-2 md:order-1 lg:order-1 hidden md:block lg:block">
            {/* Main Navigation - Desktop only */}
            <nav className="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
              <ul className="space-y-2">
                {tabs.map((tab) => {
                  const Icon = tab.icon;
                  return (
                    <li key={tab.id}>
                      <button
                        onClick={() => handleTabChange(tab.id)}
                        className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-colors ${
                          activeTab === tab.id
                            ? 'bg-blue-600 text-white border border-blue-600'
                            : 'text-gray-700 hover:text-gray-800 hover:bg-gray-100'
                        }`}
                      >
                        <Icon className="w-5 h-5" />
                        <span className="font-medium">{tab.label}</span>
                      </button>
                    </li>
                  );
                })}
              </ul>
            </nav>

            {/* FAQs Section - Desktop only */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 mt-4 lg:mt-0 hidden md:block lg:block">
              <div className="flex items-center space-x-2 mb-4">
                <HelpCircle className="w-5 h-5 text-blue-600" />
                <h3 className="text-lg font-semibold text-gray-900">FAQs</h3>
              </div>
              
              <div className="space-y-2">
                {faqData.map((faq) => (
                  <div key={faq.id} className="border border-gray-200 rounded-lg">
                    <button
                      onClick={() => setExpandedFAQ(expandedFAQ === faq.id ? null : faq.id)}
                      className="w-full flex items-center justify-between p-3 text-left hover:bg-gray-50 transition-colors"
                    >
                      <span className="text-sm font-medium text-gray-800">{faq.question}</span>
                      {expandedFAQ === faq.id ? (
                        <ChevronUp className="w-4 h-4 text-gray-500" />
                      ) : (
                        <ChevronDown className="w-4 h-4 text-gray-500" />
                      )}
                    </button>
                    {expandedFAQ === faq.id && (
                      <div className="px-3 pb-3 text-sm text-gray-600 border-t border-gray-100">
                        <p className="pt-2">{faq.answer}</p>
                      </div>
                    )}
                  </div>
                ))}
              </div>
              
              <div className="mt-4 pt-4 border-t border-gray-200">
                <Link 
                  href="/help" 
                  className="text-sm text-blue-600 hover:text-blue-700 font-medium flex items-center space-x-1"
                >
                  <span>View All Help Articles</span>
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                  </svg>
                </Link>
              </div>
            </div>
          </aside>

          {/* Main Content */}
          <main className="flex-1 w-full order-1 md:order-2 lg:order-2 mb-6 md:mb-0 lg:mb-0 md:mr-4 lg:mr-8">
            {/* Mobile tab indicator - Hidden on tablet and desktop */}
            <div className="md:hidden lg:hidden mb-4 bg-white rounded-lg shadow-sm border border-gray-200 p-3">
              <div className="flex items-center space-x-2">
                {(() => {
                  const activeTabInfo = tabs.find(tab => tab.id === activeTab);
                  const Icon = activeTabInfo?.icon || User;
                  return (
                    <>
                      <Icon className="w-5 h-5 text-blue-600" />
                      <h2 className="text-lg font-semibold text-gray-900">{activeTabInfo?.label || 'Overview'}</h2>
                    </>
                  );
                })()}
              </div>
            </div>
            {activeTab === 'overview' && (
              <div className="space-y-6 sm:space-y-8">
                {/* Stats Grid - Redesigned for better tablet display */}
                <div className="grid grid-cols-2 gap-3 sm:gap-4">
                  <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                    <div className="px-4 py-3.5 sm:px-5 sm:py-4">
                      <div className="flex items-center justify-between">
                        <div>
                          <p className="text-xs sm:text-sm text-gray-600 mb-1">Tickets Listed</p>
                          <p className="text-xl sm:text-2xl font-bold text-gray-800">{memberStats.ticketsListed}</p>
                        </div>
                        <div className="w-10 h-10 sm:w-12 sm:h-12 bg-blue-50 rounded-lg flex items-center justify-center">
                          <Ticket className="w-5 h-5 sm:w-6 sm:h-6 text-blue-600" />
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                    <div className="px-4 py-3.5 sm:px-5 sm:py-4">
                      <div className="flex items-center justify-between">
                        <div>
                          <p className="text-xs sm:text-sm text-gray-600 mb-1">Tickets Sold</p>
                          <p className="text-xl sm:text-2xl font-bold text-gray-800">{memberStats.ticketsSold}</p>
                        </div>
                        <div className="w-10 h-10 sm:w-12 sm:h-12 bg-green-50 rounded-lg flex items-center justify-center">
                          <TrendingUp className="w-5 h-5 sm:w-6 sm:h-6 text-green-600" />
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                    <div className="px-4 py-3.5 sm:px-5 sm:py-4">
                      <div className="flex items-center justify-between">
                        <div>
                          <p className="text-xs sm:text-sm text-gray-600 mb-1">Total Earnings</p>
                          <p className="text-xl sm:text-2xl font-bold text-gray-800">à¸¿{memberStats.totalEarnings.toLocaleString()}</p>
                        </div>
                        <div className="w-10 h-10 sm:w-12 sm:h-12 bg-yellow-50 rounded-lg flex items-center justify-center">
                          <DollarSign className="w-5 h-5 sm:w-6 sm:h-6 text-yellow-600" />
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                    <div className="px-4 py-3.5 sm:px-5 sm:py-4">
                      <div className="flex items-center justify-between">
                        <div>
                          <p className="text-xs sm:text-sm text-gray-600 mb-1">Purchases</p>
                          <p className="text-xl sm:text-2xl font-bold text-gray-800">{memberStats.ticketsBought}</p>
                        </div>
                        <div className="w-10 h-10 sm:w-12 sm:h-12 bg-purple-50 rounded-lg flex items-center justify-center">
                          <ShoppingCart className="w-5 h-5 sm:w-6 sm:h-6 text-purple-600" />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Recent Activity - Completely redesigned for tablet display */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-6">
                  {/* Recent Listings - Improved card design */}
                  <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                    <div className="px-4 py-3 sm:px-5 sm:py-4 border-b border-gray-100 flex items-center justify-between">
                      <h3 className="text-lg font-semibold text-gray-900">Recent Listings</h3>
                      <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">View All</button>
                    </div>
                    <div className="p-3 sm:p-4">
                      {recentListings.map((ticket) => (
                        <div key={ticket.id} className="bg-gray-50 rounded-lg mb-3 last:mb-0">
                          <div className="px-3 py-3 sm:px-4 sm:py-3">
                            <div className="flex flex-col sm:flex-row sm:items-center justify-between mb-2">
                              <h4 className="font-medium text-gray-900 text-sm sm:text-base mb-1 sm:mb-0 pr-4">{ticket.title}</h4>
                              <p className="font-semibold text-gray-900 text-sm whitespace-nowrap">à¸¿{ticket.price.toLocaleString()}</p>
                            </div>
                            <div className="flex flex-col sm:flex-row sm:items-center justify-between">
                              <p className="text-xs text-gray-600 mb-2 sm:mb-0">{ticket.venue} â¢ {ticket.date}</p>
                              <div className="flex items-center justify-between sm:justify-end w-full sm:w-auto">
                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border mr-2 sm:mr-3 ${getStatusColor(ticket.status)}`}>
                                  {ticket.status}
                                </span>
                                <div className="flex items-center text-xs text-gray-500">
                                  <Eye className="w-3.5 h-3.5 mr-1" />
                                  <span>{ticket.views}</span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Recent Orders - Improved card design */}
                  <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                    <div className="px-4 py-3 sm:px-5 sm:py-4 border-b border-gray-100 flex items-center justify-between">
                      <h3 className="text-lg font-semibold text-gray-900">Recent Orders</h3>
                      <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">View All</button>
                    </div>
                    <div className="p-3 sm:p-4">
                      {recentOrders.map((order) => (
                        <div key={order.id} className="bg-gray-50 rounded-lg mb-3 last:mb-0">
                          <div className="px-3 py-3 sm:px-4 sm:py-3">
                            <div className="flex flex-col sm:flex-row sm:items-center justify-between mb-2">
                              <h4 className="font-medium text-gray-900 text-sm sm:text-base mb-1 sm:mb-0 pr-4">{order.title}</h4>
                              <div className="flex items-center">
                                <p className="font-semibold text-gray-900 text-sm whitespace-nowrap mr-1">à¸¿{order.price.toLocaleString()}</p>
                                <p className="text-xs text-gray-500">({order.id})</p>
                              </div>
                            </div>
                            <div className="flex flex-col sm:flex-row sm:items-center justify-between">
                              <p className="text-xs text-gray-600 mb-2 sm:mb-0">{order.venue} â¢ {order.date}</p>
                              <div className="flex items-center justify-between sm:justify-end w-full sm:w-auto">
                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border mr-2 sm:mr-3 ${getStatusColor(order.status)}`}>
                                  {order.status}
                                </span>
                                <div className="flex items-center text-xs text-gray-500">
                                  <span>{order.tickets} ticket(s)</span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'my-tickets' && (
              <div className="space-y-6">
                {/* Stats Cards */}
                <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 sm:gap-5 md:gap-6">
                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Total Listed</p>
                        <p className="text-2xl font-bold text-gray-900">{myTicketListings.length}</p>
                      </div>
                      <div className="w-12 h-12 bg-blue-50 rounded-lg flex items-center justify-center">
                        <Ticket className="w-6 h-6 text-blue-600" />
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Sold</p>
                        <p className="text-2xl font-bold text-gray-900">{myTicketListings.filter(t => t.status === 'sold').length}</p>
                      </div>
                      <div className="w-12 h-12 bg-green-50 rounded-lg flex items-center justify-center">
                        <DollarSign className="w-6 h-6 text-green-600" />
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Total Views</p>
                        <p className="text-2xl font-bold text-gray-900">{myTicketListings.reduce((sum, t) => sum + t.views, 0)}</p>
                      </div>
                      <div className="w-12 h-12 bg-purple-50 rounded-lg flex items-center justify-center">
                        <Eye className="w-6 h-6 text-purple-600" />
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Total Earnings</p>
                        <p className="text-2xl font-bold text-gray-900">à¸¿{myTicketListings.filter(t => t.status === 'sold').reduce((sum, t) => sum + t.price, 0).toLocaleString()}</p>
                      </div>
                      <div className="w-12 h-12 bg-yellow-50 rounded-lg flex items-center justify-center">
                        <Star className="w-6 h-6 text-yellow-600" />
                      </div>
                    </div>
                  </div>
                </div>

                {/* Filters and Search */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <div className="flex flex-col sm:flex-row md:flex-row gap-4 items-center justify-between">
                    <div className="flex overflow-x-auto sm:overflow-visible md:overflow-visible space-x-1 pb-2 sm:pb-0 md:pb-0">
                      {ticketTabs.map((tab) => (
                        <button
                          key={tab.id}
                          onClick={() => setTicketStatusFilter(tab.id)}
                          className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
                            ticketStatusFilter === tab.id
                              ? 'bg-blue-50 text-blue-700 border border-blue-200'
                              : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                          }`}
                        >
                          {tab.label} ({tab.count})
                        </button>
                      ))}
                    </div>
                    
                    <div className="flex items-center space-x-4">
                      {/* Add Ticket Button */}
                      <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2">
                        <Plus className="w-4 h-4" />
                        <span>Add Ticket</span>
                      </button>
                      
                      <div className="relative">
                        <input
                          type="text"
                          value={ticketSearchQuery}
                          onChange={(e) => setTicketSearchQuery(e.target.value)}
                          placeholder="Search tickets..."
                          className="pl-4 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 placeholder-gray-500"
                        />
                      </div>
                      
                      {/* Quick Stats */}
                      <div className="bg-blue-50 px-4 py-2 rounded-lg">
                        <span className="text-sm text-blue-700 font-medium">
                          {filteredTickets.length} of {myTicketListings.length} tickets
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Tickets Grid */}
                <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
                  {filteredTickets.map((ticket) => (
                    <div key={ticket.id} className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow">
                      <div className="aspect-video relative">
                        <img
                          src={ticket.image}
                          alt={ticket.title}
                          className="w-full h-full object-cover"
                        />
                        <div className="absolute top-3 left-3">
                          <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(ticket.status)}`}>
                            {ticket.status}
                          </span>
                        </div>
                        <div className="absolute top-3 right-3 bg-black bg-opacity-60 rounded-lg px-2 py-1">
                          <span className="text-white text-sm font-bold">à¸¿{ticket.price.toLocaleString()}</span>
                        </div>
                      </div>
                      
                      <div className="p-4">
                        <h3 className="font-semibold text-gray-900 mb-2 line-clamp-2">{ticket.title}</h3>
                        
                        <div className="space-y-2 mb-4">
                          <div className="flex items-center text-gray-600 text-sm">
                            <MapPin className="w-4 h-4 mr-2 flex-shrink-0" />
                            <span className="truncate">{ticket.venue}, {ticket.city}</span>
                          </div>
                          <div className="flex items-center text-gray-600 text-sm">
                            <Calendar className="w-4 h-4 mr-2 flex-shrink-0" />
                            <span>{new Date(ticket.date).toLocaleDateString()} at {ticket.time}</span>
                          </div>
                          <div className="text-sm text-gray-600">
                            Section {ticket.section}, Row {ticket.row}, Seat {ticket.seat}
                          </div>
                        </div>
                        
                        <div className="flex items-center justify-between text-sm text-gray-600 mb-4">
                          <div className="flex items-center space-x-4">
                            <div className="flex items-center space-x-1">
                              <Eye className="w-4 h-4" />
                              <span>{ticket.views}</span>
                            </div>
                            <div className="flex items-center space-x-1">
                              <Heart className="w-4 h-4" />
                              <span>{ticket.favorites}</span>
                            </div>
                          </div>
                          <span className="text-xs text-gray-500">Listed {new Date(ticket.createdAt).toLocaleDateString()}</span>
                        </div>
                        
                        <div className="flex space-x-2">
                          <button className="flex-1 bg-blue-50 text-blue-700 py-2 px-3 rounded-lg hover:bg-blue-100 transition-colors flex items-center justify-center space-x-1">
                            <Eye className="w-4 h-4" />
                            <span>View</span>
                          </button>
                          <button className="flex-1 bg-gray-50 text-gray-700 py-2 px-3 rounded-lg hover:bg-gray-100 transition-colors flex items-center justify-center space-x-1">
                            <Edit className="w-4 h-4" />
                            <span>Edit</span>
                          </button>
                          <button className="bg-red-50 text-red-700 py-2 px-3 rounded-lg hover:bg-red-100 transition-colors">
                            <Trash2 className="w-4 h-4" />
                          </button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
                
                {filteredTickets.length === 0 && (
                  <div className="text-center py-12">
                    <Ticket className="w-16 h-16 text-gray-400 mx-auto mb-4" />
                    <h3 className="text-lg font-medium text-gray-900 mb-2">No tickets found</h3>
                    <p className="text-gray-600 mb-6">
                      {ticketSearchQuery || ticketStatusFilter !== 'all' 
                        ? 'Try adjusting your search or filter criteria.'
                        : 'Your ticket listings will appear here once you start selling.'}
                    </p>
                    
                    {/* Helpful Tips */}
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 max-w-md mx-auto">
                      <h4 className="text-blue-800 font-medium mb-3">ð¡ Selling Tips</h4>
                      <ul className="text-sm text-blue-700 space-y-2 text-left">
                        <li>â¢ High-quality photos increase sales by 40%</li>
                        <li>â¢ Competitive pricing attracts more buyers</li>
                        <li>â¢ Detailed descriptions build trust</li>
                        <li>â¢ Quick responses improve your rating</li>
                      </ul>
                    </div>
                  </div>
                )}
              </div>
            )}

            {activeTab === 'favorites' && (
              <div className="space-y-6">
                {/* Favorites Header */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h2 className="text-xl font-semibold text-gray-900">My Favorites</h2>
                    <div className="flex items-center space-x-4">
                      <span className="text-sm text-gray-600">{favoriteItems.length} saved items</span>
                      <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">Clear All</button>
                    </div>
                  </div>
                  <p className="text-gray-600">Keep track of events and tickets you're interested in purchasing.</p>
                </div>

                {/* Favorites Grid */}
                <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
                  {favoriteItems.map((item) => (
                    <div key={item.id} className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow group">
                      <div className="aspect-video relative">
                        <img
                          src={item.image}
                          alt={item.title}
                          className="w-full h-full object-cover"
                        />
                        <div className="absolute top-3 left-3">
                          <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-50 text-blue-700 border border-blue-200">
                            {item.category}
                          </span>
                        </div>
                        <div className="absolute top-3 right-3">
                          <button className="w-8 h-8 bg-white bg-opacity-90 rounded-full flex items-center justify-center hover:bg-opacity-100 transition-all group">
                            <Heart className="w-4 h-4 text-red-500 fill-current" />
                          </button>
                        </div>
                        <div className="absolute bottom-3 right-3 bg-black bg-opacity-60 rounded-lg px-2 py-1">
                          <span className="text-white text-sm font-bold">à¸¿{item.price.toLocaleString()}</span>
                          {item.originalPrice > item.price && (
                            <span className="text-gray-300 text-xs line-through ml-1">à¸¿{item.originalPrice.toLocaleString()}</span>
                          )}
                        </div>
                      </div>
                      
                      <div className="p-4">
                        <h3 className="font-semibold text-gray-900 mb-2 line-clamp-2">{item.title}</h3>
                        
                        <div className="space-y-2 mb-4">
                          <div className="flex items-center text-gray-600 text-sm">
                            <MapPin className="w-4 h-4 mr-2 flex-shrink-0" />
                            <span className="truncate">{item.venue}, {item.city}</span>
                          </div>
                          <div className="flex items-center text-gray-600 text-sm">
                            <Calendar className="w-4 h-4 mr-2 flex-shrink-0" />
                            <span>{new Date(item.date).toLocaleDateString()} at {item.time}</span>
                          </div>
                        </div>
                        
                        {/* Seller Info with Fixed Rating Color */}
                        <div className="flex items-center justify-between mb-4 p-3 bg-gray-50 rounded-lg">
                          <div className="flex items-center space-x-2">
                            <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                              <span className="text-blue-600 font-medium text-sm">{item.seller.name.charAt(0)}</span>
                            </div>
                            <div>
                              <p className="text-sm font-medium text-gray-900">{item.seller.name}</p>
                              {item.seller.verified && (
                                <span className="inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">
                                  â Verified
                                </span>
                              )}
                            </div>
                          </div>
                          <div className="text-right flex-shrink-0">
                            <div className="flex items-center space-x-1">
                              <Star className="w-4 h-4 text-yellow-400 fill-current" />
                              <span className="text-sm font-medium text-gray-900">{item.seller.rating}</span>
                            </div>
                            <div className="text-xs text-gray-600">({item.seller.soldCount.toLocaleString()} sold)</div>
                          </div>
                        </div>
                        
                        <div className="flex space-x-2">
                          <button className="flex-1 bg-blue-600 text-white py-2 px-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center space-x-1">
                            <ShoppingCart className="w-4 h-4" />
                            <span>Buy Now</span>
                          </button>
                          <button className="bg-gray-50 text-gray-700 py-2 px-3 rounded-lg hover:bg-gray-100 transition-colors">
                            <Eye className="w-4 h-4" />
                          </button>
                          <button className="bg-red-50 text-red-700 py-2 px-3 rounded-lg hover:bg-red-100 transition-colors">
                            <Heart className="w-4 h-4" />
                          </button>
                        </div>
                        
                        <div className="mt-3 pt-3 border-t border-gray-100">
                          <p className="text-xs text-gray-500">Added to favorites on {new Date(item.addedDate).toLocaleDateString()}</p>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
                
                {favoriteItems.length === 0 && (
                  <div className="text-center py-12">
                    <Heart className="w-16 h-16 text-gray-400 mx-auto mb-4" />
                    <h3 className="text-lg font-medium text-gray-900 mb-2">No favorites yet</h3>
                    <p className="text-gray-600 mb-6">
                      Start browsing events and add your favorites to keep track of tickets you're interested in.
                    </p>
                    <button className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                      Browse Events
                    </button>
                  </div>
                )}
              </div>
            )}

            {activeTab === 'orders' && (
              <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <h2 className="text-xl font-semibold text-gray-900 mb-6">Order History</h2>
                <div className="space-y-4">
                  {recentOrders.map((order) => (
                    <div key={order.id} className="border border-gray-200 rounded-lg p-6">
                      <div className="flex items-center justify-between mb-4">
                        <div>
                          <h3 className="text-lg font-medium text-gray-900">{order.title}</h3>
                          <p className="text-sm text-gray-600">Order #{order.id} â¢ Placed on {order.orderDate}</p>
                        </div>
                        <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium border ${getStatusColor(order.status)}`}>
                          {order.status}
                        </span>
                      </div>
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div className="flex items-center space-x-2">
                          <MapPin className="w-4 h-4 text-gray-400" />
                          <span className="text-sm text-gray-700">{order.venue}</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <Calendar className="w-4 h-4 text-gray-400" />
                          <span className="text-sm text-gray-700">{order.date}</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <Ticket className="w-4 h-4 text-gray-400" />
                          <span className="text-sm text-gray-700">{order.tickets} ticket(s)</span>
                        </div>
                      </div>
                      <div className="flex items-center justify-between mt-4 pt-4 border-t border-gray-200">
                        <span className="text-lg font-semibold text-gray-900">Total: ${order.price}</span>
                        <div className="flex space-x-3">
                          <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">Download Tickets</button>
                          <button className="text-gray-600 hover:text-gray-700 text-sm font-medium">Contact Seller</button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'payments' && (
              <div className="space-y-6">
                {/* Payment Stats */}
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Total Earnings</p>
                        <p className="text-2xl font-bold text-green-600">à¸¿{memberStats.totalEarnings.toLocaleString()}</p>
                      </div>
                      <div className="w-12 h-12 bg-green-50 rounded-lg flex items-center justify-center">
                        <DollarSign className="w-6 h-6 text-green-600" />
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Total Spent</p>
                        <p className="text-2xl font-bold text-blue-600">à¸¿{memberStats.totalSpent.toLocaleString()}</p>
                      </div>
                      <div className="w-12 h-12 bg-blue-50 rounded-lg flex items-center justify-center">
                        <CreditCard className="w-6 h-6 text-blue-600" />
                      </div>
                    </div>
                  </div>

                  <div className="bg-white rounded-xl p-4 sm:p-5 md:p-6 shadow-sm border border-gray-200">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="text-sm text-gray-600">Pending Payouts</p>
                        <p className="text-2xl font-bold text-yellow-600">à¸¿1,250</p>
                      </div>
                      <div className="w-12 h-12 bg-yellow-50 rounded-lg flex items-center justify-center">
                        <Clock className="w-6 h-6 text-yellow-600" />
                      </div>
                    </div>
                  </div>
                </div>

                {/* Payment Methods */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <div className="flex items-center justify-between mb-6">
                    <h3 className="text-lg font-semibold text-gray-900">Payment Methods</h3>
                    <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2">
                      <Plus className="w-4 h-4" />
                      <span>Add Payment Method</span>
                    </button>
                  </div>
                  <div className="space-y-4">
                    <div className="border border-gray-200 rounded-lg p-4 flex items-center justify-between">
                      <div className="flex items-center space-x-4">
                        <div className="w-12 h-8 bg-blue-600 rounded flex items-center justify-center">
                          <span className="text-white text-xs font-bold">VISA</span>
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">â¢â¢â¢â¢ â¢â¢â¢â¢ â¢â¢â¢â¢ 4242</p>
                          <p className="text-sm text-gray-600">Expires 12/26</p>
                        </div>
                      </div>
                      <div className="flex space-x-2">
                        <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">Edit</button>
                        <button className="text-red-600 hover:text-red-700 text-sm font-medium">Remove</button>
                      </div>
                    </div>
                    <div className="border border-gray-200 rounded-lg p-4 flex items-center justify-between">
                      <div className="flex items-center space-x-4">
                        <div className="w-12 h-8 bg-orange-500 rounded flex items-center justify-center">
                          <span className="text-white text-xs font-bold">MC</span>
                        </div>
                        <div>
                          <p className="font-medium text-gray-900">â¢â¢â¢â¢ â¢â¢â¢â¢ â¢â¢â¢â¢ 8888</p>
                          <p className="text-sm text-gray-600">Expires 03/27</p>
                        </div>
                      </div>
                      <div className="flex space-x-2">
                        <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">Edit</button>
                        <button className="text-red-600 hover:text-red-700 text-sm font-medium">Remove</button>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Recent Transactions */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-6">Recent Transactions</h3>
                  <div className="space-y-4">
                    <div className="border-b border-gray-200 pb-4 last:border-b-0">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-4">
                          <div className="w-10 h-10 bg-green-50 rounded-full flex items-center justify-center">
                            <Plus className="w-5 h-5 text-green-600" />
                          </div>
                          <div>
                            <p className="font-medium text-gray-900">Ticket Sale - Taylor Swift Concert</p>
                            <p className="text-sm text-gray-600">Oct 20, 2024 â¢ Card ending 4242</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="font-semibold text-green-600">+à¸¿12,500</p>
                          <p className="text-sm text-gray-600">Completed</p>
                        </div>
                      </div>
                    </div>
                    <div className="border-b border-gray-200 pb-4 last:border-b-0">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-4">
                          <div className="w-10 h-10 bg-blue-50 rounded-full flex items-center justify-center">
                            <ShoppingCart className="w-5 h-5 text-blue-600" />
                          </div>
                          <div>
                            <p className="font-medium text-gray-900">Purchased - NBA Finals Tickets</p>
                            <p className="text-sm text-gray-600">Oct 18, 2024 â¢ Card ending 8888</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="font-semibold text-red-600">-à¸¿890</p>
                          <p className="text-sm text-gray-600">Completed</p>
                        </div>
                      </div>
                    </div>
                    <div className="border-b border-gray-200 pb-4 last:border-b-0">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-4">
                          <div className="w-10 h-10 bg-yellow-50 rounded-full flex items-center justify-center">
                            <Clock className="w-5 h-5 text-yellow-600" />
                          </div>
                          <div>
                            <p className="font-medium text-gray-900">Payout - Jazz Festival Tickets</p>
                            <p className="text-sm text-gray-600">Oct 15, 2024 â¢ Bank transfer</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="font-semibold text-yellow-600">à¸¿4,500</p>
                          <p className="text-sm text-gray-600">Pending</p>
                        </div>
                      </div>
                    </div>
                    <div className="border-b border-gray-200 pb-4 last:border-b-0">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-4">
                          <div className="w-10 h-10 bg-green-50 rounded-full flex items-center justify-center">
                            <Plus className="w-5 h-5 text-green-600" />
                          </div>
                          <div>
                            <p className="font-medium text-gray-900">Ticket Sale - Muay Thai Championship</p>
                            <p className="text-sm text-gray-600">Oct 10, 2024 â¢ Card ending 4242</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="font-semibold text-green-600">+à¸¿3,200</p>
                          <p className="text-sm text-gray-600">Completed</p>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="mt-6 pt-6 border-t border-gray-200">
                    <button className="w-full text-blue-600 hover:text-blue-700 font-medium">View All Transactions</button>
                  </div>
                </div>

                {/* Payout Settings */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-6">Payout Settings</h3>
                  <div className="space-y-4">
                    <div className="border border-gray-200 rounded-lg p-4">
                      <div className="flex items-center justify-between mb-2">
                        <h4 className="font-medium text-gray-900">Bank Account (THB)</h4>
                        <span className="text-green-600 text-sm font-medium">Active</span>
                      </div>
                      <p className="text-sm text-gray-600">Kasikornbank â¢â¢â¢â¢ 1234</p>
                      <p className="text-sm text-gray-600">Auto payout every Friday</p>
                    </div>
                    <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">Update Payout Method</button>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'reviews' && (
              <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                <div className="flex items-center justify-between mb-6">
                  <h2 className="text-xl font-semibold text-gray-900">Reviews & Ratings</h2>
                  <div className="flex items-center space-x-4">
                    <div className="flex items-center space-x-2">
                      <Star className="w-5 h-5 text-yellow-400 fill-current" />
                      <span className="text-lg font-semibold">{memberStats.rating}</span>
                      <span className="text-gray-500">({memberStats.reviewCount} reviews)</span>
                    </div>
                  </div>
                </div>
                <div className="space-y-6">
                  {reviews.map((review) => (
                    <div key={review.id} className="border border-gray-200 rounded-lg p-6">
                      <div className="flex items-start justify-between mb-4">
                        <div className="flex items-center space-x-3">
                          <div className="w-10 h-10 bg-gray-300 rounded-full"></div>
                          <div>
                            <h4 className="font-medium text-gray-900">{review.reviewer}</h4>
                            <div className="flex items-center space-x-2">
                              <div className="flex">
                                {[1, 2, 3, 4, 5].map((star) => (
                                  <Star
                                    key={star}
                                    className={`w-4 h-4 ${
                                      star <= review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'
                                    }`}
                                  />
                                ))}
                              </div>
                              <span className="text-sm text-gray-500">{review.date}</span>
                            </div>
                          </div>
                        </div>
                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                          review.type === 'buyer' ? 'bg-blue-50 text-blue-700' : 'bg-green-50 text-green-700'
                        }`}>
                          {review.type === 'buyer' ? 'As Buyer' : 'As Seller'}
                        </span>
                      </div>
                      <p className="text-gray-700">{review.comment}</p>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'settings' && (
              <div className="space-y-8">
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <h2 className="text-xl font-semibold text-gray-900 mb-6">Account Settings</h2>
                  <div className="space-y-6">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">First Name</label>
                        <input type="text" className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" defaultValue="John" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
                        <input type="text" className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" defaultValue="Doe" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
                        <input type="email" className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" defaultValue="john.doe@example.com" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">Phone</label>
                        <input type="tel" className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" defaultValue="+1 (555) 123-4567" />
                      </div>
                    </div>
                    <button className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                      Save Changes
                    </button>
                  </div>
                </div>

                {/* Password Change Section */}
                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Change Password</h3>
                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">Current Password</label>
                      <input 
                        type="password" 
                        className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" 
                        placeholder="Enter current password"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">New Password</label>
                      <input 
                        type="password" 
                        className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" 
                        placeholder="Enter new password"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">Confirm New Password</label>
                      <input 
                        type="password" 
                        className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-gray-900 placeholder-gray-500" 
                        placeholder="Confirm new password"
                      />
                    </div>
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                      <h4 className="text-sm font-medium text-blue-800 mb-2">Password Requirements:</h4>
                      <ul className="text-sm text-blue-700 space-y-1">
                        <li>â¢ At least 8 characters long</li>
                        <li>Contains uppercase and lowercase letters</li>
                        <li>Contains at least one number</li>
                        <li>Contains at least one special character</li>
                      </ul>
                    </div>
                    <button className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center space-x-2">
                      <Shield className="w-4 h-4" />
                      <span>Update Password</span>
                    </button>
                  </div>
                </div>

                <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">Notification Preferences</h3>
                  <div className="space-y-4">
                    {[
                      { id: 'email', label: 'Email Notifications', description: 'Receive updates via email' },
                      { id: 'sms', label: 'SMS Notifications', description: 'Receive important updates via SMS' },
                      { id: 'push', label: 'Push Notifications', description: 'Receive browser notifications' },
                      { id: 'marketing', label: 'Marketing Emails', description: 'Receive promotional content' }
                    ].map((item) => (
                      <div key={item.id} className="flex items-center justify-between">
                        <div>
                          <h4 className="font-medium text-gray-900">{item.label}</h4>
                          <p className="text-sm text-gray-600">{item.description}</p>
                        </div>
                        <label className="relative inline-flex items-center cursor-pointer">
                          <input type="checkbox" className="sr-only peer" defaultChecked />
                          <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                        </label>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}
          </main>

          {/* Right Sidebar - Fixed Height Chatbox - Only visible on large screens */}
          <aside className="hidden lg:block w-80 flex-shrink-0 order-3 z-10">
            {/* Floating Chat Icon (Mobile) - Only visible when minimized */}
            {isChatboxMinimized && (
              <button
                onClick={() => setIsChatboxMinimized(false)}
                className="fixed bottom-6 right-6 z-50 bg-blue-600 text-white p-4 rounded-full shadow-lg hover:bg-blue-700 active:bg-blue-800 active:scale-95 transition-all duration-200"
                aria-label="Open chat"
              >
                <MessageCircle className="w-6 h-6" />
              </button>
            )}

            {/* Chatbox - Only visible on large screens and when not minimized */}
            <div className={`bg-white rounded-xl shadow-sm border border-gray-200 fixed top-60 right-8 bottom-8 flex flex-col transition-all duration-300 ease-in-out ${isChatboxMinimized ? 'hidden' : 'flex'} hidden lg:flex`} style={{ width: '20rem' }}>
              {/* Chat Header */}
              <div className="border-b border-gray-200 p-4 flex-shrink-0">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                      <MessageCircle className="w-5 h-5 text-white" />
                    </div>
                    <div>
                      <h3 className="text-lg font-semibold text-gray-900">AI Chat Assistant</h3>
                      <p className="text-sm text-gray-600">Get help with tickets & events</p>
                    </div>
                  </div>
                  <div className="flex flex-col items-end space-y-2">
                    {/* Minimize button for mobile - positioned above status */}
                    <button
                      onClick={() => setIsChatboxMinimized(true)}
                      className="block text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100"
                      aria-label="Minimize chat on mobile"
                    >
                      <MinusIcon className="w-5 h-5" />
                    </button>
                    <div className="flex items-center space-x-2">
                      {/* Online status */}
                      <div className="flex items-center space-x-2 text-sm text-gray-500">
                        <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                        <span>Online</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              {/* Chat Content */}
              <div className="flex-1 overflow-hidden">
                <MarketplaceChatBot className="h-full" />
              </div>
            </div>
          </aside>

          {/* Mobile Floating Chat Button - Visible on mobile/tablet but not desktop */}
          {!isChatboxMinimized ? (
            <div className="lg:hidden fixed inset-0 bg-black bg-opacity-50 z-40" onClick={() => setIsChatboxMinimized(true)}></div>
          ) : (
            <button
              onClick={() => setIsChatboxMinimized(false)}
              className="fixed lg:hidden bottom-6 right-6 z-50 bg-blue-600 text-white p-4 rounded-full shadow-lg hover:bg-blue-700 active:bg-blue-800 active:scale-95 transition-all duration-200"
              aria-label="Open chat"
            >
              <MessageCircle className="w-6 h-6" />
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default MemberDashboard;